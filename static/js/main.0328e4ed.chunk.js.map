{"version":3,"sources":["model/FieldType.ts","model/ObjectBuilderLegacy.ts","model/Field.ts","model/MovementError.ts","model/FieldList.ts","model/FieldListBuilderLegacy.ts","view/FieldBlock.tsx","view/FieldListContainer.tsx","view/TextEditor.jsx","view/App.tsx","index.js"],"names":["FieldType","Object","freeze","PRIMITIVE","OBJECT","ARRAY","ObjectBuilderLegacy","classCallCheck","this","createClass","key","value","fieldList","result","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","fields","Symbol","iterator","next","done","field","console","log","concat","toConsumableArray","parentChain","join","type","isArrayItem","err","return","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","parent","_iteratorNormalCompletion3","_didIteratorError3","_iteratorError3","_step3","_iterator3","entries","_ref3","_ref2","slicedToArray","i","parentKey","level","Field","source","id","shortid","Boolean","get","isArray","isObject","Array","Number","isNaN","Error","recognizeType","length","MovementError","_Error","_ref","_this","code","message","possibleConstructorReturn","getPrototypeOf","call","captureStackTrace","assertThisInitialized","setPrototypeOf","prototype","inherits","wrapNativeSuper","FieldList","map","f","clone","sourceId","destinationIds","sourceIndex","indexOf","precedingIndex","followingIndex","sourceChildren","previous","startsWith","updatedSource","precedingChain","followingChain","commonChain","Math","min","push","getSiblings","some","s","updatedFields","splice","isContainer","_updatedFields","children","getChildren","child","updatedChildren","updatedChild","slice","apply","equals","refreshSiblings","arguments","siblings","includeSelf","insertionIndex","POSITIVE_INFINITY","sibling","index","updatedSiblings","updatedSibling","getItemByChain","chain","find","_this2","_ref$includeSelf","filter","_this3","array1","array2","every","search","fieldId","findIndex","FieldListBuilderLegacy","_isPlainObject","_fromObject","array","_fromArray","object","_i","_Object$entries","_ref6","_ref5","levelColors","FieldBlock","React","memo","forwardRef","ref","_ref$className","className","props","objectWithoutProperties","react_default","a","createElement","assign","style","_objectSpread","marginLeft","backgroundColor","toString","String","stringify","FieldListContainer","onFieldListUpdate","onDragEnd","useCallback","destination","precendingIndex","moveField","error","warn","react_beautiful_dnd_esm","droppableId","provided","droppableProps","innerRef","draggableId","FieldBlock_FieldBlock","draggableProps","dragHandleProps","placeholder","TextEditor","initialValue","onChange","_useState","useState","_useState2","setValue","_useState3","_useState4","isFocused","setIsFocused","selectionRef","useRef","start","end","textAreaRef","revert","useEffect","handler","event","ctrlKey","preventDefault","window","addEventListener","removeEventListener","handleChange","target","handleFocus","handleBlur","handleKeyDown","selectionStart","selectionEnd","substring","handleSelect","current","onBlur","onFocus","onKeyDown","onSelect","autoCapitalize","autoCorrect","autoComplete","spellCheck","hello","isEnabled","nested","lorem","secretNumber","nested2","jon","inception","hello2","isEnabled2","nested3","lorem2","secretNumber2","nested4","ReactDOM","render","FieldListBuilder","from","setFieldList","json","useMemo","JSON","ObjectBuilder","fromFieldList","handleFieldListUpdate","handleJsonChange","updatedJson","parse","FieldListContainer_FieldListContainer","TextEditor_TextEditor","document","getElementById"],"mappings":"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","file":"static/js/main.0328e4ed.chunk.js","sourcesContent":["export const FieldType = Object.freeze({\n    PRIMITIVE: 'primitive',\n    OBJECT: 'object',\n    ARRAY: 'array',\n});\n\nexport const recognizeType = (value: any) => {\n    if (Array.isArray(value)) {\n        return FieldType.ARRAY;\n    }\n\n    if (typeof value === 'object' && value !== null) {\n        return FieldType.OBJECT;\n    }\n\n    if (\n        value === null\n        || (typeof value === 'number' && !Number.isNaN(value))\n        || typeof value === 'string'\n        || typeof value === 'boolean'\n    ) {\n        return FieldType.PRIMITIVE;\n    }\n\n    throw new Error('Invalid value type');\n}","import { FieldType } from './FieldType';\nimport { FieldList } from './FieldList';\n\nexport class ObjectBuilderLegacy {\n    static fromFieldList(fieldList: FieldList): object {\n        const result = {};\n\n        for (const field of fieldList.fields) {\n            console.log(`[${[...field.parentChain, field.key].join('.')}: ${field.value === undefined ? 'none': field.value} (${field.type}, item: ${field.isArrayItem})]`)\n        }\n\n        for (const field of fieldList.fields) {\n            let parent: any = result;\n\n            for (const [i, parentKey] of field.parentChain.entries()) {\n                if (parent[parentKey] === undefined) {\n                    if (i === field.level - 1) {\n                        parent[parentKey] = field.type === FieldType.ARRAY ? [] : {};\n                    } else {\n                        parent[parentKey] = {};\n                    }\n                }\n\n                parent = parent[parentKey];\n            }\n\n            const value = field.type === FieldType.ARRAY\n                ? []\n                : field.type === FieldType.OBJECT\n                    ? {}\n                    : field.value;\n\n            parent[field.key] = value;\n        }\n\n        return result;\n    }\n}\n","import shortid from 'shortid';\nimport { recognizeType, FieldType } from './FieldType';\n\nexport type Key = string | number;\nexport type ParentChain = Key[];\n\nexport class Field {\n    id: string;\n    parentChain: ParentChain;\n    key: Key;\n    value: any;\n    isArrayItem: boolean;\n\n    constructor(source: {\n        id?: string,\n        key: Key,\n        value: any,\n        parentChain?: ParentChain,\n        isArrayItem?: boolean\n    }) {\n        this.id = source.id || shortid();\n        this.parentChain = [...source.parentChain || []];\n        this.key = source.key;\n        this.value = source.value;\n        this.isArrayItem = Boolean(source.isArrayItem);\n    }\n\n    clone() {\n        return new Field({\n            id: this.id,\n            key: this.key,\n            value: this.value,\n            parentChain: this.parentChain,\n            isArrayItem: this.isArrayItem,\n        });\n    }\n\n    get isArray() {\n        return this.type === FieldType.ARRAY;\n    }\n\n    get isObject() {\n        return this.type === FieldType.OBJECT;\n    }\n\n    get isPrimitive() {\n        return this.type === FieldType.PRIMITIVE;\n    }\n\n    get isContainer() {\n        return this.isArray || this.isObject;\n    }\n\n    get type() {\n        return recognizeType(this.value);\n    }\n\n    get level() {\n        return this.parentChain.length;\n    }\n}\n","export class MovementError extends Error {\n    readonly code: string;\n\n    constructor({ code, message }: { code: string, message?: string }) {\n        super(message || 'Unexpected error');\n\n        this.code = code;\n\n        Error.captureStackTrace(this, MovementError);\n        Object.setPrototypeOf(this, MovementError.prototype);\n    }\n}\n","import { Field, Key } from './Field';\nimport { FieldType } from './FieldType';\nimport { MovementError } from './MovementError';\n\nexport class FieldList {\n    fields: Field[];\n\n    constructor(fields: Field[]) {\n        this.fields = [...fields];\n    }\n\n    clone() {\n        return new FieldList(\n            this.fields.map(f => f.clone())\n        );\n    }\n\n    /**\n     * @param sourceId Item to move (field id or index or `null` for start/beginning of the list)\n     * @param destinationIds Item to put the moved item after/before (and use it as a sample)\n     *                    (field id or index or `null` for start/beginning of the list)\n     * @returns `true` when fields have been updated\n     */\n    moveField(sourceId: number | string, destinationIds: [string | number | null, string | number | null]) {\n        /**\n         * 1) Converting field ids into indexes\n         */\n        \n        const sourceIndex = typeof sourceId === 'number' ? sourceId : this.indexOf(sourceId);\n        \n        const precedingIndex = destinationIds[0] === null ? null\n            : typeof destinationIds[0] !== 'string' ? destinationIds[0]\n            : this.indexOf(destinationIds[0]);\n\n        const followingIndex = destinationIds[1] === null ? null\n            : typeof destinationIds[1] !== 'string' ? destinationIds[1]\n            : this.indexOf(destinationIds[1]);\n        \n        /**\n         * 2) Validating indexes\n         */\n\n        if (sourceIndex < 0 || sourceIndex >= this.fields.length) {\n            throw new Error('Invalid sourceId argument value');\n        }\n\n        if (precedingIndex === null && followingIndex === null) {\n            throw new Error('At least one of destinationIds values must not be null');\n        }\n\n        if (\n            precedingIndex !== null\n            && (precedingIndex < 0 || precedingIndex > this.fields.length)\n        ) {\n            throw new Error('Invalid destinationIds[0] argument value');\n        }\n\n        if (\n            followingIndex !== null\n            && (followingIndex < 0 || followingIndex > this.fields.length)\n        ) {\n            throw new Error('Invalid destinationIds[1] argument value');\n        }\n        \n        // Skipping movement when indexes are equal\n        if (sourceIndex === precedingIndex) {\n            return false;\n        }\n\n        const source = this.fields[sourceIndex];\n        const sourceChildren = [...source.parentChain, source.key];\n\n        const previous = precedingIndex !== null ? this.fields[precedingIndex] : null;\n        const next = followingIndex !== null ? this.fields[followingIndex] : null;\n\n        if (\n            previous && !next &&\n            this.startsWith(previous.parentChain, sourceChildren)\n        ) {\n            return false;\n        }\n\n        const updatedSource = source.clone();\n\n        if (updatedSource.isArrayItem) {\n            if (previous && previous.isArray) {\n                updatedSource.parentChain = [...previous.parentChain, previous.key];\n            } else if (previous && previous.isArrayItem) {\n                updatedSource.parentChain = previous.parentChain;\n            } else if (next && next.isArrayItem) {\n                updatedSource.parentChain = next.parentChain;\n            } else {\n                throw new MovementError({\n                    code: 'BAD_MOVEMENT',\n                    message: 'Could not move an array item to a non-array context'\n                });\n            }\n        } else {\n            if (previous && previous.isObject) {\n                if (this.startsWith(previous.parentChain, sourceChildren)) {\n                    throw new MovementError({\n                        code: 'BAD_MOVEMENT',\n                        message: 'Could not move an object inside itself'\n                    });\n                }\n\n                updatedSource.parentChain = [...previous.parentChain, previous.key];\n            } else if (previous && next) {\n                if ((previous.isArrayItem || previous.isArray) && next.isArrayItem) {\n                    throw new MovementError({\n                        code: 'BAD_MOVEMENT',\n                        message: 'Could not move a non-array item into an array'\n                    });\n                } else if (previous.isArrayItem) {\n                    updatedSource.parentChain = next.parentChain;\n                } else {\n                    updatedSource.parentChain = previous.parentChain;\n                }\n\n                const precedingChain = previous.parentChain;\n                const followingChain = next.parentChain;\n    \n                const commonChain = [];\n                for (let i = 0; i < Math.min(precedingChain.length, followingChain.length); i++) {\n                    if (precedingChain[i] !== followingChain[i]) {\n                        break;\n                    }\n    \n                    commonChain.push(precedingChain[i]);\n                }\n\n                if (this.startsWith(commonChain, sourceChildren)) {\n                    throw new MovementError({\n                        code: 'BAD_MOVEMENT',\n                        message: 'Could not move an object inside itself'\n                    });\n                }\n    \n                updatedSource.parentChain = commonChain;\n            } else {\n                updatedSource.parentChain = [];\n            }\n        }\n\n        if (!updatedSource.isArrayItem) {\n            const siblings = this.getSiblings(updatedSource);\n\n            if (siblings.some(s => s.key === updatedSource.key)) {\n                throw new MovementError({\n                    code: 'BAD_MOVEMENT',\n                    message: 'Could not move the field due to key overlap'\n                }); \n            }\n        }\n\n        let updatedFields = [...this.fields];\n        updatedFields.splice(\n            precedingIndex !== null ? (precedingIndex + 1) : 0,\n            0, updatedSource\n        );\n        updatedFields.splice(updatedFields.indexOf(source), 1);\n\n        if (source.isContainer) {\n            const children = this.getChildren(source);\n\n            for (const child of children) {\n                updatedFields.splice(updatedFields.indexOf(child), 1);\n            }\n\n            const updatedChildren = children.map((child) => {\n                const updatedChild = child.clone();\n\n                updatedChild.parentChain = [\n                    ...updatedSource.parentChain,\n                    updatedSource.key,\n                    ...child.parentChain.slice(source.level + 1),\n                ];\n    \n                return updatedChild;\n            });\n    \n            updatedFields.splice(updatedFields.indexOf(updatedSource) + 1, 0, ...updatedChildren);\n        }\n\n        if (updatedSource.isArrayItem) {\n            if (!this.equals(source.parentChain, updatedSource.parentChain)) {\n                updatedFields = this.refreshSiblings(source, updatedFields);\n            }\n            updatedFields = this.refreshSiblings(updatedSource, updatedFields);\n        }\n\n        this.fields = updatedFields;\n\n        return true;\n    }\n\n    refreshSiblings(field: Field, fields = this.fields) {\n        const siblings = this.getSiblings(field, { includeSelf: true }, fields);\n\n        const updatedFields = [...fields];\n\n        let insertionIndex = Number.POSITIVE_INFINITY;\n        for (const sibling of siblings) {\n            const index = updatedFields.indexOf(sibling);\n            if (index < insertionIndex) {\n                insertionIndex = index;\n            }\n\n            updatedFields.splice(index, 1);\n        }\n        \n        const updatedSiblings = siblings.map((sibling, i) => {\n            const updatedSibling = sibling.clone();\n            updatedSibling.key = i;\n\n            return updatedSibling;\n        });\n\n        updatedFields.splice(insertionIndex, 0, ...updatedSiblings);\n\n        return updatedFields;\n    }\n\n    getParent(field: Field) {\n        return this.getItemByChain(field.parentChain);\n    }\n\n    getItemByChain(chain: Key[]) {\n        if (chain.length === 0) return null;\n\n        const parentChain = chain.slice(0, -1);\n        const key = chain[chain.length - 1];\n\n        return this.fields.find(f => (\n            f.key === key &&\n            this.equals(f.parentChain, parentChain)\n        )) || null;\n    }\n\n    getSiblings(field: Field, { includeSelf = false } = {}, fields = this.fields) {\n        return fields.filter(\n            f => this.equals(f.parentChain, field.parentChain) && (includeSelf || f.id !== field.id)\n        );\n    }\n\n    getChildren(field: Field, fields = this.fields) {\n        if (field.type !== FieldType.OBJECT && field.type !== FieldType.ARRAY) {\n            return [];\n        }\n\n        const chain = [...field.parentChain, field.key];\n        return fields.filter(\n            f => this.startsWith(f.parentChain, chain)\n        );\n    }\n\n    equals(array1: any[], array2: any[]) {\n        return array1.length === array2.length\n            && array1.every((value, i) => array2[i] === value);\n    }\n\n    startsWith(source: any[], search: any[]) {\n        return search.every((value, i) => source[i] === value);\n    }\n\n    indexOf(fieldId: string) {\n        return this.fields.findIndex(f => f.id === fieldId);\n    }\n}\n","import { Field, ParentChain } from './Field';\nimport { FieldList } from './FieldList';\n\nexport class FieldListBuilderLegacy {\n    static from(source: { [x: string]: any } | any[]) {\n        if (Array.isArray(source)) {\n            throw new Error('Arrays are not supported yet');\n        }\n\n        if (!this._isPlainObject(source)) {\n            throw new Error('Source should be either an array or plain object');\n        }\n\n        return new FieldList(this._fromObject(source));\n    }\n\n    static _fromArray(array: any[], parentChain: ParentChain = []): Field[] {\n        const fields = [];\n    \n        for (const [key, value] of array.entries()) {\n            fields.push(\n                new Field({\n                    key, value, parentChain, isArrayItem: true\n                })\n            );\n    \n            if (Array.isArray(value)) {\n                fields.push(\n                    ...this._fromArray(value, [...parentChain, key])\n                );\n            }\n    \n            if (this._isPlainObject(value)) {\n                fields.push(\n                    ...this._fromObject(value, [...parentChain, key])\n                );\n            }\n        }\n    \n        return fields;\n    };\n    \n    static _fromObject(object: object, parentChain: ParentChain = []): Field[] {\n        const fields = [];\n    \n        for (const [key, value] of Object.entries(object)) {\n            fields.push(\n                new Field({\n                    key, value, parentChain,\n                })\n            );\n    \n            if (Array.isArray(value)) {\n                fields.push(\n                    ...this._fromArray(value, [...parentChain, key])\n                );\n            }\n    \n            if (this._isPlainObject(value)) {\n                fields.push(\n                    ...this._fromObject(value, [...parentChain, key])\n                );\n            }\n        }\n    \n        return fields;\n    }\n\n    static _isPlainObject(value: any) {\n        return typeof value === 'object' && value !== null && !Array.isArray(value);\n    }\n}\n","import React, { FunctionComponent } from 'react';\nimport { FieldType } from '../model/FieldType';\nimport { Field } from '../model/Field';\nimport './FieldBlock.css';\n\nconst stringify = (field: Field) => {\n    if (field.type === FieldType.PRIMITIVE) {\n        if (typeof field.value === 'string') {\n            return '\"' + field.value + '\"';\n        }\n\n        return String(field.value);\n    }\n\n    return field.type === FieldType.ARRAY ? '[' : '{';\n};\n\nconst levelColors = [0xcfe2f1, 0xc7efba, 0xf9f6a2, 0xf9cc88, 0xffb88f, 0xffc0fa];\n\ntype Props = {\n    field: Field,\n    index?: number,\n    className?: string,\n    [x: string]: any,\n};\n\nexport const FieldBlockRaw: FunctionComponent<Props> = ({ field, index = 0, className = '', ...props }, ref) => {\n    return (\n        <div\n            ref={ref}\n            {...props}\n            className={`field-block ${className}`}\n            style={{\n                ...props.style || {},\n                marginLeft: `${field.level * 16}px`,\n                backgroundColor:\n                    '#' + levelColors[field.level % levelColors.length].toString(16)\n            }}\n        >\n            {!field.isArrayItem && `${field.key}:`} {stringify(field)}\n        </div>\n    );\n};\n\nexport const FieldBlock = React.memo(\n    React.forwardRef<HTMLDivElement, Props>(FieldBlockRaw)\n);\n","import React, { useCallback, FunctionComponent } from 'react';\nimport { DragDropContext, Droppable, Draggable, DropResult } from 'react-beautiful-dnd';\nimport { FieldList } from '../model/FieldList';\nimport { FieldBlock } from './FieldBlock';\nimport './FieldListContainer.css';\nimport { MovementError } from '../model/MovementError';\n\nexport const FieldListContainer: FunctionComponent<{\n    fieldList: FieldList,\n    onFieldListUpdate: () => void,\n    className?: string,\n}> = ({\n    fieldList,\n    onFieldListUpdate,\n    className = ''\n}) => {\n    const onDragEnd = useCallback((result: DropResult) => {\n        if (\n            !result.destination ||\n            result.source.index === result.destination.index\n        ) return;\n\n        const source = result.source.index;\n        const destination = result.destination.index;\n\n        let precendingIndex: number | null;\n        let followingIndex: number | null;\n\n        if (source > destination) {\n            precendingIndex = destination === 0 ? null : destination - 1;\n            followingIndex = destination;\n        } else {\n            precendingIndex = destination;\n            followingIndex = destination === fieldList.fields.length - 1 ? null : destination + 1;\n        }\n\n        try {\n            if (fieldList.moveField(source, [precendingIndex, followingIndex])) {\n                onFieldListUpdate();\n            }\n        } catch (error) {\n            if (error instanceof MovementError) {\n                console.warn(`[${error.code}] ${error.message}`);\n            } else {\n                throw error;\n            }\n        }\n    }, [onFieldListUpdate, fieldList]);\n\n    return (\n        <DragDropContext onDragEnd={onDragEnd}>\n            <Droppable droppableId=\"droppable\">\n                {(provided) => (\n                    <div\n                        {...provided.droppableProps}\n                        ref={provided.innerRef}\n                        className={`field-list ${className}`}>\n                        {fieldList.fields.map((field, index) => (\n                            <Draggable\n                                key={field.id}\n                                draggableId={field.id}\n                                index={index}>\n                                {(provided) => (\n                                    <FieldBlock\n                                        className=\"field-list__field-block\"\n                                        ref={provided.innerRef}\n                                        {...provided.draggableProps}\n                                        {...provided.dragHandleProps}\n                                        index={index}\n                                        field={field}\n                                    />\n                                )}\n                            </Draggable>\n                        ))}\n                        {provided.placeholder}\n                    </div>\n                )}\n            </Droppable>\n        </DragDropContext>\n    )\n};\n","import React, { useState, useCallback, useEffect, useRef } from 'react';\nimport './TextEditor.css';\n\nexport const TextEditor = ({ value: initialValue, onChange, className = '' }) => {\n    const [value, setValue] = useState(initialValue);\n    const [isFocused, setIsFocused] = useState(false);\n    const selectionRef = useRef({ start: 0, end: 0 });\n    const textAreaRef = useRef();\n    const revert = useCallback(() => setValue(initialValue), [initialValue]);\n\n    useEffect(() => {\n        setValue(initialValue);\n    }, [initialValue]);\n\n    // useEffect(() => {\n    //     textAreaRef.current.selectionStart = selectionRef.current.start;\n    //     textAreaRef.current.selectionEnd = selectionRef.current.end;\n    // }, [value]);\n\n    useEffect(() => {\n        const handler = (event) => {\n            if (event.ctrlKey && event.key === 's') {\n                event.preventDefault();\n\n                if (value !== initialValue) {\n                    onChange(value, revert);\n                }\n            }\n        };\n\n        window.addEventListener('keydown', handler);\n        return () => window.removeEventListener('keydown', handler);\n    }, [initialValue, value, onChange, revert]);\n\n    const handleChange = useCallback((event) => {\n        const value = event.target.value;\n\n        setValue(value);\n    }, [setValue]);\n\n    const handleFocus = useCallback(() => {\n        setIsFocused(true);\n    }, [setIsFocused]);\n\n    const handleBlur = useCallback((event) => {\n        const value = event.target.value;\n\n        setIsFocused(false);\n        \n        if (value !== initialValue) {\n            onChange(value, revert);\n        }\n    }, [initialValue, onChange, revert]);\n\n    const handleKeyDown = useCallback(/** @param {KeyboardEvent} event */ (event) => {\n        const target = event.target;\n        const value = target.value;\n\n        if (event.key === 'Tab') {\n            event.preventDefault();\n\n            const identation = '    ';\n            const start = target.selectionStart;\n            const end = target.selectionEnd;\n\n            target.value = value.substring(0, start) + identation + value.substring(end);\n            target.selectionEnd = start + identation.length; \n        }\n    }, []);\n\n    const handleSelect = useCallback((event) => {\n        selectionRef.current.start = event.target.selectionStart;\n        selectionRef.current.end = event.target.selectionEnd;\n    }, [selectionRef]);\n\n    return (\n        <div className={`text-editor ${className}`}>\n            <textarea\n                ref={textAreaRef}\n                className={['text-editor__text-area', isFocused && 'text-editor__text-area--focused'].filter(Boolean).join(' ')}\n                onChange={handleChange}\n                onBlur={handleBlur}\n                onFocus={handleFocus}\n                value={value}\n                onKeyDown={handleKeyDown}\n                onSelect={handleSelect}\n                autoCapitalize=\"off\"\n                autoCorrect=\"off\"\n                autoComplete=\"off\"\n                spellCheck=\"false\"\n            />\n            {isFocused && <div className=\"text-editor__apply-notice\">Click outside to apply changes (Ctrl+S)</div>}\n        </div>\n    )\n};\n","import React, { useState, useCallback, useMemo } from 'react';\nimport { ObjectBuilderLegacy as ObjectBuilder } from '../model/ObjectBuilderLegacy';\nimport { FieldListBuilderLegacy as FieldListBuilder } from '../model/FieldListBuilderLegacy';\nimport { FieldListContainer } from './FieldListContainer';\nimport { TextEditor } from './TextEditor';\nimport './App.css';\n\nconst object = {\n    hello: 'world',\n    isEnabled: true,\n    nested: {\n        lorem: 'ipsum',\n        secretNumber: 123,\n        nested2: {\n            jon: 'snow'\n        }\n    },\n    inception: {\n        hello2: 'world',\n        isEnabled2: true,\n        nested3: {\n            lorem2: 'ipsum',\n            secretNumber2: 123,\n            nested4: {\n                jon: 'snow'\n            }\n        }\n    },\n};\n\n// const object = {\n//     a: {\n//         b: {\n//             c: 'hello'\n//         }\n//     }\n// };\n\nexport const App = () => {\n    const [fieldList, setFieldList] = useState(\n        FieldListBuilder.from(object)\n    );\n\n    const json = useMemo(\n        () => JSON.stringify(\n            ObjectBuilder.fromFieldList(fieldList),\n            null,\n            4\n        ),\n        [fieldList]\n    );\n\n    const handleFieldListUpdate = useCallback(() => {\n        setFieldList(fieldList.clone());\n    }, [fieldList, setFieldList]);\n\n    const handleJsonChange = useCallback((updatedJson, revert) => {\n        let object;\n        try {\n            object = JSON.parse(updatedJson);\n        } catch (error) {\n            revert();\n            return;\n        }\n\n        setFieldList(\n            FieldListBuilder.from(object)\n        );\n    }, [setFieldList]);\n\n    return (\n        <div className=\"app-wrapper\">\n            <div className=\"app\">\n                <FieldListContainer\n                    className=\"app__field-list\"\n                    fieldList={fieldList}\n                    onFieldListUpdate={handleFieldListUpdate}\n                />\n\n                <TextEditor\n                    className=\"app__json-editor\"\n                    value={json}\n                    onChange={handleJsonChange}\n                />\n            </div>\n        </div>\n    );\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { App } from './view/App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}