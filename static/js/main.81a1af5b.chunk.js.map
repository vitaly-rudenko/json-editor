{"version":3,"sources":["utils/isObject.js","model/FieldType.js","model/Field.js","model/flattenObject.js","view/FieldBlock.jsx","view/FieldList.jsx","view/TextEditor.jsx","utils/debounce.js","view/App.jsx","index.js","model/buildObject.js"],"names":["isObject","value","FieldType","PRIMITIVE","OBJECT","Field","source","Object","classCallCheck","this","id","shortid","type","parentChain","key","undefined","createClass","get","length","flattenObject","object","arguments","fields","_i","_Object$entries","entries","_ref3","_ref2","slicedToArray","push","apply","toConsumableArray","concat","levelColors","FieldBlock","React","memo","forwardRef","_ref","ref","field","_ref$className","index","onDrag","className","props","objectWithoutProperties","react_default","a","createElement","assign","style","_objectSpread","marginLeft","level","backgroundColor","toString","String","FieldList","onFieldsUpdate","onDragEnd","useCallback","result","destination","before","after","beforeDestination","destinationSample","children","chain","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","Symbol","iterator","next","done","startsWith","err","return","updatedField","updatedFields","splice","indexOf","_children","child","updatedChildren","map","updatedChild","slice","react_beautiful_dnd_esm","droppableId","provided","droppableProps","innerRef","draggableId","FieldBlock_FieldBlock","draggableProps","dragHandleProps","placeholder","TextEditor","initialValue","onChange","_ref$debounceDelay","debounceDelay","_React$useState","useState","_React$useState2","setValue","revert","debouncedChangeDispatch","useMemo","callback","ms","timeout","_this","_arguments","clearTimeout","setTimeout","debounce","useEffect","handleChange","event","target","hello","isEnabled","nested","lorem","secretNumber","nested2","jon","inception","hello2","isEnabled2","nested3","lorem2","secretNumber2","nested4","ReactDOM","render","_useState","_useState2","setFields","json","JSON","stringify","parent","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","parentKey","buildObject","handleFieldsUpdate","handleJsonChange","updatedJson","parse","error","FieldList_FieldList","TextEditor_TextEditor","document","getElementById"],"mappings":"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","file":"static/js/main.81a1af5b.chunk.js","sourcesContent":["export const isObject = (value) => {\n    return typeof value === 'object' && value !== null;\n};\n","export const FieldType = {\n    PRIMITIVE: 'primitive',\n    OBJECT: 'object',\n};","import shortid from 'shortid';\nimport { isObject } from '../utils/isObject';\nimport { FieldType } from './FieldType';\n\nexport class Field {\n    /** @type {string} */ id;\n    /** @type {string} */ type;\n    /** @type {string[]} */ parentChain;\n    /** @type {string} */ key;\n    /** @type {any} */ value;\n\n    constructor(source) {\n        this.id = source.id || shortid();\n        this.type = source.type || (isObject(source.value) ? FieldType.OBJECT : FieldType.PRIMITIVE);\n        this.parentChain = source.parentChain;\n        this.key = source.key;\n        this.value = isObject(source.value) ? undefined : source.value;\n    }\n\n    get level() {\n        return this.parentChain.length;\n    }\n}\n","import { Field } from './Field';\nimport { isObject } from '../utils/isObject';\n\nexport const flattenObject = (object, parentChain = []) => {\n    const fields = [];\n\n    for (const [key, value] of Object.entries(object)) {\n        fields.push(\n            new Field({\n                key, value, parentChain,\n            })\n        );\n\n        if (isObject(value)) {\n            fields.push(\n                ...flattenObject(value, [...parentChain, key])\n            );\n        }\n    }\n\n    return fields;\n};","import React from 'react';\nimport './FieldBlock.css';\n\nconst stringify = (value) => {\n    if (typeof value === 'string') {\n        return '\"' + value + '\"';\n    }\n\n    if (value === undefined) {\n        return '{}';\n    }\n\n    return String(value);\n};\n\nconst levelColors = [0xcfe2f1, 0xfeffa0, 0xf3d1d4, 0xcfffd0];\n\nexport const FieldBlock = React.memo(React.forwardRef(\n    /** @param {{ field: Field }} props */\n    ({ field, index = 0, onDrag, className = '', ...props }, ref) => {\n        return (\n            <div\n                ref={ref}\n                {...props}\n                className={`field-block ${className}`}\n                style={{\n                    ...props.style || {},\n                    marginLeft: `${field.level * 16}px`,\n                    backgroundColor:\n                        '#' + levelColors[field.level % levelColors.length].toString(16)\n                }}\n            >\n                {field.key}: {stringify(field.value)}\n            </div>\n        );\n    }\n));\n","import React, { useCallback } from 'react';\nimport { DragDropContext, Droppable, Draggable } from 'react-beautiful-dnd';\nimport { FieldType } from '../model/FieldType';\nimport { Field } from '../model/Field';\nimport { FieldBlock } from './FieldBlock';\nimport './FieldList.css';\n\nexport const FieldList = ({ fields, onFieldsUpdate, className = '' }) => {\n    const onDragEnd = useCallback((result) => {\n        if (!result.destination) {\n            return;\n        }\n\n        const source = result.source.index;\n        const destination = result.destination.index;\n\n        if (source === destination) {\n            return;\n        }\n\n        const field = fields[source];\n        const before = source > destination ? destination - 1 : destination;\n        const after = source > destination ? destination : destination + 1;\n        const beforeDestination = fields[before];\n        const afterDestination = fields[after];\n\n        const destinationSample = afterDestination || beforeDestination;\n\n        const children = [];        \n        const chain = [...field.parentChain, field.key];\n        if (field.type === FieldType.OBJECT) {\n            for (const field of fields) {\n                if (field.parentChain.toString().startsWith(chain.toString())) {\n                    children.push(field);\n                }\n            }\n        }\n\n        // TODO: same key problem\n        // TODO: move object inside itself\n        // TODO: move inside empty object\n        // TODO: array support\n\n        const updatedField = new Field(field);\n        updatedField.parentChain = destinationSample.parentChain;\n\n        const updatedFields = [...fields];\n        updatedFields.splice(before + 1, 0, updatedField);\n        updatedFields.splice(updatedFields.indexOf(field), 1);\n\n        for (const child of children) {\n            updatedFields.splice(updatedFields.indexOf(child), 1);\n        }\n\n        const updatedChildren = children.map((child) => {\n            const updatedChild = new Field(child);\n\n            updatedChild.parentChain = [\n                ...updatedField.parentChain,\n                updatedField.key,\n                ...child.parentChain.slice(chain.length)\n            ];\n\n            return updatedChild;\n        });\n\n        updatedFields.splice(updatedFields.indexOf(updatedField) + 1, 0, ...updatedChildren);\n\n        onFieldsUpdate(updatedFields);\n    }, [fields, onFieldsUpdate]);\n\n    return (\n        <DragDropContext onDragEnd={onDragEnd}>\n            <Droppable droppableId=\"droppable\">\n                {(provided) => (\n                    <div\n                        {...provided.droppableProps}\n                        ref={provided.innerRef}\n                        className={`field-list ${className}`}>\n                        {fields.map((field, index) => (\n                            <Draggable\n                                key={field.id}\n                                draggableId={field.id}\n                                index={index}>\n                                {(provided) => (\n                                    <FieldBlock\n                                        className=\"field-list__field-block\"\n                                        ref={provided.innerRef}\n                                        {...provided.draggableProps}\n                                        {...provided.dragHandleProps}\n                                        index={index}\n                                        field={field}\n                                    />\n                                )}\n                            </Draggable>\n                        ))}\n                        {provided.placeholder}\n                    </div>\n                )}\n            </Droppable>\n        </DragDropContext>\n    )\n};\n","import React from 'react';\nimport './TextEditor.css';\nimport { debounce } from '../utils/debounce';\n\nexport const TextEditor = ({ value: initialValue, onChange, debounceDelay = 0, className = '' }) => {\n    const [value, setValue] = React.useState(initialValue);\n    const revert = React.useCallback(() => setValue(initialValue), [initialValue]);\n\n    const debouncedChangeDispatch = React.useMemo(() => {\n        const callback = (value) => onChange(value, revert);\n        return debounceDelay > 0 ? debounce(callback, debounceDelay) : callback;\n    }, [debounceDelay, onChange, revert]);\n\n    React.useEffect(() => {\n        setValue(initialValue);\n    }, [initialValue]);\n\n    const handleChange = React.useCallback((event) => {\n        const value = event.target.value;\n\n        setValue(value);\n        debouncedChangeDispatch(value, initialValue);\n    }, [setValue, debouncedChangeDispatch, initialValue]);\n\n    return (\n        <div className={`text-editor ${className}`}>\n            <textarea\n                className=\"text-editor__text-area\"\n                onChange={handleChange}\n                value={value}/>\n        </div>\n    )\n};\n","export const debounce = (callback, ms) => {\n    let timeout;\n\n    return function() {\n        const functionCall = () => callback.apply(this, arguments);\n\n        clearTimeout(timeout);\n        timeout = setTimeout(functionCall, ms);\n    };\n};\n","import React, { useState, useCallback, useMemo } from 'react';\nimport { flattenObject } from '../model/flattenObject';\nimport { buildObject } from '../model/buildObject';\nimport { FieldList } from './FieldList';\nimport './App.css';\nimport { TextEditor } from './TextEditor';\n\nconst object = {\n    hello: 'world',\n    isEnabled: true,\n    nested: {\n        lorem: 'ipsum',\n        secretNumber: 123,\n        nested2: {\n            jon: 'snow'\n        }\n    },\n    inception: {\n        hello2: 'world',\n        isEnabled2: true,\n        nested3: {\n            lorem2: 'ipsum',\n            secretNumber2: 123,\n            nested4: {\n                jon: 'snow'\n            }\n        }\n    },\n};\n\nexport const App = () => {\n    /** @type {[Field[], (fields: Field[]) => void]} */\n    const [fields, setFields] = useState(flattenObject(object));\n    const json = useMemo(\n        () => JSON.stringify(buildObject(fields), null, 4),\n        [fields]\n    );\n\n    const handleFieldsUpdate = useCallback((updatedFields) => {\n        setFields(updatedFields);\n    }, [setFields]);\n\n    const handleJsonChange = useCallback((updatedJson, revert) => {\n        let object;\n        try {\n            object = JSON.parse(updatedJson);\n        } catch (error) {\n            revert();\n            return;\n        }\n\n        setFields(flattenObject(object));\n    }, [setFields]);\n\n    return (\n        <div className=\"app-wrapper\">\n            <div className=\"app\">\n                <FieldList\n                    className=\"app__field-list\"\n                    fields={fields}\n                    onFieldsUpdate={handleFieldsUpdate}\n                />\n\n                <TextEditor\n                    className=\"app__json-editor\"\n                    value={json}\n                    onChange={handleJsonChange}\n                    debounceDelay={1000}\n                />\n            </div>\n        </div>\n    );\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { App } from './view/App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n","/** @param {Field[]} fields */\nexport const buildObject = (fields) => {\n    const result = {};\n\n    for (const field of fields) {\n        let parent = result;\n\n        for (const parentKey of field.parentChain) {\n            if (parent[parentKey] === undefined) {\n                parent[parentKey] = {};\n            }\n\n            parent = parent[parentKey];\n        }\n\n        parent[field.key] = field.value === undefined ? {} : field.value;\n    }\n\n    return result;\n};\n"],"sourceRoot":""}