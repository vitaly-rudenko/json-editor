{"version":3,"sources":["model/FieldType.js","view/FieldBlock.jsx","view/FieldList.jsx","view/TextEditor.jsx","model/ObjectBuilder.js","model/FieldUtil.js","model/Field.js","model/FieldList.js","model/FieldListBuilder.js","view/App.jsx","index.js"],"names":["FieldType","Object","freeze","PRIMITIVE","OBJECT","ARRAY","levelColors","FieldBlock","React","memo","forwardRef","_ref","ref","field","_ref$className","index","onDrag","className","props","objectWithoutProperties","react_default","a","createElement","assign","concat","style","_objectSpread","marginLeft","level","backgroundColor","length","toString","isArrayItem","key","type","value","String","stringify","FieldList","fieldList","onFieldListUpdate","onDragEnd","useCallback","result","destination","source","updatedFieldList","move","react_beautiful_dnd_esm","droppableId","provided","droppableProps","innerRef","fields","map","id","draggableId","FieldBlock_FieldBlock","draggableProps","dragHandleProps","placeholder","TextEditor","initialValue","onChange","_useState","useState","_useState2","slicedToArray","setValue","_useState3","_useState4","isFocused","setIsFocused","revert","useEffect","handler","event","ctrlKey","preventDefault","window","addEventListener","removeEventListener","handleChange","target","handleFocus","handleBlur","handleKeyDown","start","selectionStart","end","selectionEnd","substring","filter","Boolean","join","onBlur","onFocus","onKeyDown","autoCapitalize","autoCorrect","autoComplete","spellCheck","ObjectBuilder","classCallCheck","this","createClass","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","Symbol","iterator","next","done","console","log","toConsumableArray","parentChain","err","return","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","parent","_iteratorNormalCompletion3","_didIteratorError3","_iteratorError3","_step3","_iterator3","entries","_ref3","_ref2","i","parentKey","FieldUtil","Array","isArray","Field","shortid","recognizeType","get","before","after","beforeDestination","destinationSample","children","chain","startsWith","push","updatedField","updatedFields","splice","indexOf","_i","_children","child","updatedChildren","updatedChild","slice","apply","FieldListBuilder","Error","_isPlainObject","_fromObject","array","arguments","_fromArray","object","_Object$entries","_ref6","_ref5","hello","isEnabled","nested","lorem","secretNumber","nested2","jon","inception","hello2","isEnabled2","nested3","lorem2","secretNumber2","nested4","ReactDOM","render","from","setFieldList","json","useMemo","JSON","fromFieldList","handleFieldListUpdate","handleJsonChange","updatedJson","parse","error","FieldList_FieldList","TextEditor_TextEditor","document","getElementById"],"mappings":"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","file":"static/js/main.9a58e2ee.chunk.js","sourcesContent":["export const FieldType = Object.freeze({\n    PRIMITIVE: 'primitive',\n    OBJECT: 'object',\n    ARRAY: 'array',\n});","import React from 'react';\nimport './FieldBlock.css';\nimport { FieldType } from '../model/FieldType';\n\nconst stringify = (field) => {\n    if (field.type === FieldType.PRIMITIVE) {\n        if (typeof field.value === 'string') {\n            return '\"' + field.value + '\"';\n        }\n\n        return String(field.value);\n    }\n\n    return field.type === FieldType.ARRAY ? '[' : '{';\n};\n\nconst levelColors = [0xcfe2f1, 0xfeffa0, 0xf3d1d4, 0xcfffd0];\n\nexport const FieldBlock = React.memo(React.forwardRef(\n    /** @param {{ field: Field }} props */\n    ({ field, index = 0, onDrag, className = '', ...props }, ref) => {\n        return (\n            <div\n                ref={ref}\n                {...props}\n                className={`field-block ${className}`}\n                style={{\n                    ...props.style || {},\n                    marginLeft: `${field.level * 16}px`,\n                    backgroundColor:\n                        '#' + levelColors[field.level % levelColors.length].toString(16)\n                }}\n            >\n                {!field.isArrayItem && `${field.key}:`} {stringify(field)}\n            </div>\n        );\n    }\n));\n","import React, { useCallback } from 'react';\nimport { DragDropContext, Droppable, Draggable } from 'react-beautiful-dnd';\nimport { FieldBlock } from './FieldBlock';\nimport './FieldList.css';\n\nexport const FieldList = ({ fieldList, onFieldListUpdate, className = '' }) => {\n    const onDragEnd = useCallback((result) => {\n        if (!result.destination) {\n            return;\n        }\n\n        const source = result.source.index;\n        const destination = result.destination.index;\n\n        const updatedFieldList = fieldList.move(source, destination);\n        \n        if (updatedFieldList !== fieldList) {\n            onFieldListUpdate(updatedFieldList);\n        }\n    }, [fieldList, onFieldListUpdate]);\n\n    return (\n        <DragDropContext onDragEnd={onDragEnd}>\n            <Droppable droppableId=\"droppable\">\n                {(provided) => (\n                    <div\n                        {...provided.droppableProps}\n                        ref={provided.innerRef}\n                        className={`field-list ${className}`}>\n                        {fieldList.fields.map((field, index) => (\n                            <Draggable\n                                key={field.id}\n                                draggableId={field.id}\n                                index={index}>\n                                {(provided) => (\n                                    <FieldBlock\n                                        className=\"field-list__field-block\"\n                                        ref={provided.innerRef}\n                                        {...provided.draggableProps}\n                                        {...provided.dragHandleProps}\n                                        index={index}\n                                        field={field}\n                                    />\n                                )}\n                            </Draggable>\n                        ))}\n                        {provided.placeholder}\n                    </div>\n                )}\n            </Droppable>\n        </DragDropContext>\n    )\n};\n","import React, { useState, useCallback, useEffect } from 'react';\nimport './TextEditor.css';\n\nexport const TextEditor = ({ value: initialValue, onChange, className = '' }) => {\n    const [value, setValue] = useState(initialValue);\n    const [isFocused, setIsFocused] = useState(false);\n    const revert = useCallback(() => setValue(initialValue), [initialValue]);\n\n    useEffect(() => {\n        setValue(initialValue);\n    }, [initialValue]);\n\n    useEffect(() => {\n        const handler = (event) => {\n            if (event.ctrlKey && event.key === 's') {\n                event.preventDefault();\n\n                if (value !== initialValue) {\n                    onChange(value, revert);\n                }\n            }\n        };\n\n        window.addEventListener('keydown', handler);\n        return () => window.removeEventListener('keydown', handler);\n    }, [initialValue, value, onChange, revert]);\n\n    const handleChange = useCallback((event) => {\n        const value = event.target.value;\n\n        setValue(value);\n    }, [setValue]);\n\n    const handleFocus = useCallback(() => {\n        setIsFocused(true);\n    }, [setIsFocused]);\n\n    const handleBlur = useCallback((event) => {\n        const value = event.target.value;\n\n        setIsFocused(false);\n        \n        if (value !== initialValue) {\n            onChange(value, revert);\n        }\n    }, [initialValue, onChange, revert]);\n\n    const handleKeyDown = useCallback(/** @param {KeyboardEvent} event */ (event) => {\n        const target = event.target;\n        const value = target.value;\n\n        if (event.key === 'Tab') {\n            event.preventDefault();\n\n            const identation = '    ';\n            const start = target.selectionStart;\n            const end = target.selectionEnd;\n\n            target.value = value.substring(0, start) + identation + value.substring(end);\n            target.selectionEnd = start + identation.length; \n        }\n    }, []);\n\n    return (\n        <div className={`text-editor ${className}`}>\n            <textarea\n                className={['text-editor__text-area', isFocused && 'text-editor__text-area--focused'].filter(Boolean).join(' ')}\n                onChange={handleChange}\n                onBlur={handleBlur}\n                onFocus={handleFocus}\n                value={value}\n                onKeyDown={handleKeyDown}\n                autoCapitalize=\"off\"\n                autoCorrect=\"off\"\n                autoComplete=\"off\"\n                spellCheck=\"false\"\n            />\n            {isFocused && <div className=\"text-editor__apply-notice\">Click outside to apply changes (Ctrl+S)</div>}\n        </div>\n    )\n};\n","import { FieldType } from './FieldType';\n\nexport class ObjectBuilder {\n    /** @param {import('./FieldList').FieldList} fieldList */\n    static fromFieldList(fieldList) {\n        const result = {};\n\n        for (const field of fieldList.fields) {\n            console.log(`[${[...field.parentChain, field.key].join('.')}: ${field.value === undefined ? 'none': field.value} (${field.type}, item: ${field.isArrayItem})]`)\n        }\n\n        for (const field of fieldList.fields) {\n            let parent = result;\n\n            for (const [i, parentKey] of field.parentChain.entries()) {\n                if (parent[parentKey] === undefined) {\n                    if (i === field.parentChain.length - 1) {\n                        parent[parentKey] = field.type === FieldType.ARRAY ? [] : {};\n                    } else {\n                        parent[parentKey] = {};\n                    }\n                }\n\n                parent = parent[parentKey];\n            }\n\n            const value = field.type === FieldType.ARRAY\n                ? []\n                : field.type === FieldType.OBJECT\n                    ? {}\n                    : field.value;\n\n            parent[field.key] = value;\n        }\n\n        return result;\n    }\n}\n","import { FieldType } from \"./FieldType\";\n\nexport class FieldUtil {\n    static recognizeType(value) {\n        if (Array.isArray(value)) {\n            return FieldType.ARRAY;\n        }\n\n        if (typeof value === 'object' && value !== null) {\n            return FieldType.OBJECT;\n        }\n\n        return FieldType.PRIMITIVE;\n    }\n}\n","import shortid from 'shortid';\nimport { FieldType } from './FieldType';\nimport { FieldUtil } from './FieldUtil';\n\nexport class Field {\n    /** @type {string} */ id;\n    /** @type {string} */ type;\n    /** @type {string[]} */ parentChain;\n    /** @type {string} */ key;\n    /** @type {any} */ value;\n    /** @type {boolean} */ isArrayItem;\n\n    /** @param {Field | { key: string, value: any, parentChain?: string[], isArrayItem?: boolean }} source */\n    constructor(source) {\n        if (source instanceof Field) {\n            this.id = source.id;\n            this.type = source.type;\n            this.parentChain = [...source.parentChain];\n            this.key = source.key;\n            this.value = source.value;\n            this.isArrayItem = source.isArrayItem;\n        } else {\n            this.id = shortid();\n            this.type = FieldUtil.recognizeType(source.value);\n            this.parentChain = source.parentChain || [];\n            this.key = source.key;\n            this.value = this.type === FieldType.PRIMITIVE ? source.value : undefined;\n            this.isArrayItem = Boolean(source.isArrayItem);\n        }\n    }\n\n    get level() {\n        return this.parentChain.length;\n    }\n}\n","import { Field } from \"./Field\";\nimport { FieldType } from \"./FieldType\";\n\nexport class FieldList {\n    /** @type {Field[]} */ fields;\n    \n    /** @param {FieldList | Field[]} source */\n    constructor(source) {\n        if (source instanceof FieldList) {\n            this.fields = [...source.fields];\n        } else {\n            this.fields = source;\n        }\n    }\n\n    /**\n     * @param {number} source\n     * @param {number} destination\n     */\n    move(source, destination) {\n        if (source === destination) {\n            return this;\n        }\n\n        const field = this.fields[source];\n        const before = source > destination ? destination - 1 : destination;\n        const after = source > destination ? destination : destination + 1;\n        const beforeDestination = this.fields[before];\n        const afterDestination = this.fields[after];\n\n        const destinationSample = afterDestination || beforeDestination;\n\n        const children = [];        \n        const chain = [...field.parentChain, field.key];\n        if (field.type === FieldType.OBJECT) {\n            for (const field of this.fields) {\n                if (field.parentChain.toString().startsWith(chain.toString())) {\n                    children.push(field);\n                }\n            }\n        }\n\n        const updatedField = new Field(field);\n        updatedField.parentChain = destinationSample.parentChain;\n\n        const updatedFields = [...this.fields];\n        updatedFields.splice(before + 1, 0, updatedField);\n        updatedFields.splice(updatedFields.indexOf(field), 1);\n\n        for (const child of children) {\n            updatedFields.splice(updatedFields.indexOf(child), 1);\n        }\n\n        const updatedChildren = children.map((child) => {\n            const updatedChild = new Field(child);\n\n            updatedChild.parentChain = [\n                ...updatedField.parentChain,\n                updatedField.key,\n                ...child.parentChain.slice(chain.length)\n            ];\n\n            return updatedChild;\n        });\n\n        updatedFields.splice(updatedFields.indexOf(updatedField) + 1, 0, ...updatedChildren);\n\n        return new FieldList(updatedFields);\n    }\n}\n","import { Field } from './Field';\nimport { FieldList } from './FieldList';\n\nexport class FieldListBuilder {\n    /** @param {{ [x: string]: any } | any[]} source */\n    static from(source) {\n        if (Array.isArray(source)) {\n            throw new Error('Arrays are not supported yet');\n        }\n\n        if (!this._isPlainObject(source)) {\n            throw new Error('Source should be either an array or plain object');\n        }\n\n        return new FieldList(this._fromObject(source));\n    }\n\n    static _fromArray(array, parentChain = []) {\n        const fields = [];\n    \n        for (const [key, value] of array.entries()) {\n            fields.push(\n                new Field({\n                    key, value, parentChain, isArrayItem: true\n                })\n            );\n    \n            if (Array.isArray(value)) {\n                fields.push(\n                    ...this._fromArray(value, [...parentChain, key])\n                );\n            }\n    \n            if (this._isPlainObject(value)) {\n                fields.push(\n                    ...this._fromObject(value, [...parentChain, key])\n                );\n            }\n        }\n    \n        return fields;\n    };\n    \n    static _fromObject(object, parentChain = []) {\n        const fields = [];\n    \n        for (const [key, value] of Object.entries(object)) {\n            fields.push(\n                new Field({\n                    key, value, parentChain,\n                })\n            );\n    \n            if (Array.isArray(value)) {\n                fields.push(\n                    ...this._fromArray(value, [...parentChain, key])\n                );\n            }\n    \n            if (this._isPlainObject(value)) {\n                fields.push(\n                    ...this._fromObject(value, [...parentChain, key])\n                );\n            }\n        }\n    \n        return fields;\n    }\n\n    static _isPlainObject(value) {\n        return typeof value === 'object' && value !== null && !Array.isArray(value);\n    }\n}\n","import React, { useState, useCallback, useMemo } from 'react';\nimport { FieldList } from './FieldList';\nimport { TextEditor } from './TextEditor';\nimport './App.css';\nimport { ObjectBuilder } from '../model/ObjectBuilder';\nimport { FieldListBuilder } from '../model/FieldListBuilder';\n\nconst object = {\n    hello: 'world',\n    isEnabled: true,\n    nested: {\n        lorem: 'ipsum',\n        secretNumber: 123,\n        nested2: {\n            jon: 'snow'\n        }\n    },\n    inception: {\n        hello2: 'world',\n        isEnabled2: true,\n        nested3: {\n            lorem2: 'ipsum',\n            secretNumber2: 123,\n            nested4: {\n                jon: 'snow'\n            }\n        }\n    },\n};\n\nexport const App = () => {\n    /** @type {[FieldList, (value: FieldList) => void]} */\n    const [fieldList, setFieldList] = useState(\n        FieldListBuilder.from(object)\n    );\n\n    const json = useMemo(\n        () => JSON.stringify(\n            ObjectBuilder.fromFieldList(fieldList),\n            null,\n            4\n        ),\n        [fieldList]\n    );\n\n    const handleFieldListUpdate = useCallback((updatedFieldList) => {\n        setFieldList(updatedFieldList);\n    }, [setFieldList]);\n\n    const handleJsonChange = useCallback((updatedJson, revert) => {\n        let object;\n        try {\n            object = JSON.parse(updatedJson);\n        } catch (error) {\n            revert();\n            return;\n        }\n\n        setFieldList(\n            FieldListBuilder.from(object)\n        );\n    }, [setFieldList]);\n\n    return (\n        <div className=\"app-wrapper\">\n            <div className=\"app\">\n                <FieldList\n                    className=\"app__field-list\"\n                    fieldList={fieldList}\n                    onFieldListUpdate={handleFieldListUpdate}\n                />\n\n                <TextEditor\n                    className=\"app__json-editor\"\n                    value={json}\n                    onChange={handleJsonChange}\n                />\n            </div>\n        </div>\n    );\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { App } from './view/App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}